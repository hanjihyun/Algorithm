import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Scanner;

public class 덱_백준10866 {
	static int N;
	static Deque<Integer> deq;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		deq = new ArrayDeque<Integer>();

		for (int i = 0; i < N; i++) {
			String str = sc.next();
			switch (str) {
			case "push_front":
				deq.offerFirst(sc.nextInt());
				break;
			case "push_back":
				deq.offerLast(sc.nextInt());
				break;
			case "pop_front":
				if (deq.size() > 0) {
					System.out.println(deq.pollFirst());
				} else {
					System.out.println(-1);
				}
				break;
			case "pop_back":
				if (deq.size() > 0) {
					System.out.println(deq.pollLast());
				} else {
					System.out.println(-1);
				}
				break;
			case "size":
				System.out.println(deq.size());
				break;
			case "empty":
				if (deq.isEmpty()) {
					System.out.println(1);
				} else {
					System.out.println(0);
				}
				break;
			case "front":
				if (deq.size() > 0) {
					System.out.println(deq.peekFirst());
				} else {
					System.out.println(-1);
				}
				break;

			case "back":
				if (deq.size() > 0) {
					System.out.println(deq.peekLast());
				} else {
					System.out.println(-1);
				}
				break;
			}
		}
	}
}
